@import '../../../../styles/variables';

/*
	Table of contents

	Button
		General
		Icon
		Sizes (small, large, ...)
		Levels (primary, secondary, ...)
		Invisible
		Circular
		Side
		Ghost
		Inverted
		Disability

	Button menu
*/

/* === Button ======================================= */

/* General */
.ptr-button {
  background: var(--base30);
  color: var(--base100);
  //border: 1px solid rgba(0,0,0,.02); // TODO why?
  border-radius: .2rem;
  box-shadow: 0 1px 2px 0 rgba(0,0,0,0.1);
  display: inline-block;
  height: m(4/3);
  outline: none;
  padding: 0 .35rem;
  position: relative;

  transition:
          background .3s ease-in-out,
          border-color .3s ease-in-out,
          color .3s ease-in-out;
}

.ptr-button > * {
  position: relative;
  z-index: 1;
}

.ptr-button:after {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  right: 0;
  background: transparent;
  transition: background .3s ease-in-out;
  z-index: 0;
}

.ptr-button:hover {
  color: var(--base100);
}

.ptr-button:not(.ghost):hover {
  border-color: transparent;
}

.ptr-button:not(.ghost):not(.invisible):hover:after,
.ptr-button.inverted:not(.ghost):not(.invisible):hover:after {
  background: rgba(255,255,255,.15);
}

.ptr-button:focus::after {
  content: ' ';
  position: absolute;
  top: 0; right: 0; bottom: 0; left: 0;
  border-radius: .2rem;
  box-shadow: 0 0 2px 2px var(--accent50);
  pointer-events: none;
}

.ptr-button:focus::after,
.ptr-button.inverted.primary:focus::after,
.ptr-button.inverted.secondary:focus::after {
  border: 1px solid rgba(var(--base100rgb),.5);
}

.ptr-button.primary:focus::after,
.ptr-button.secondary:focus::after,
.ptr-button.inverted:focus::after {
  border: 1px solid rgba(var(--base0rgb),.5);
}

.ptr-button.ghost:focus::after,
.ptr-button.invisible:focus::after {
  border: 0;
}

.ptr-button-caption {
  display: inline-block;
  vertical-align: top;
  font-size: $a1;
  margin: 0 0.25rem;
  line-height: 1;
  padding: 0.5rem 0;
}

/* Icon */
.ptr-button > .ptr-icon {
  display: inline-block;
  width: 1.25rem;
  height: 1.25rem;
  margin: .375rem .25rem;
}

.ptr-button > .ptr-icon .line {
  fill: currentColor;
}

// TODO remove after icon refactoring
.ptr-button > .ptr-icon .polygon {
  fill: transparent;
  stroke: currentColor;
}

/* Sizes */
.ptr-button.large {
  height: m(2);
  padding: 0 .5rem;
}

.ptr-button.large:focus::after {
  box-shadow: 0 0 3px 3px var(--accent50);
}

.ptr-button.large .ptr-button-caption {
  font-size: $b2;
  padding: .8455rem 0;
  margin: 0 .4rem;
}

.ptr-button.large > .ptr-icon {
  width: 1.5rem;
  height: 1.5rem;
  margin: .75rem .4rem;
}

.ptr-button.small {
  height: m(1);
  padding: 0 .35rem;
}

.ptr-button.small .ptr-button-caption {
  font-size: $b1;
  padding: .4rem 0 .291rem;
  margin: 0 .15rem;
}

.ptr-button.small > .ptr-icon {
  width: 1rem;
  height: 1rem;
  margin: .25rem .15rem;
}


/* Levels */
.ptr-button.primary {
  background: var(--accent50);
  color: var(--base0);
}

.ptr-button.primary:hover {
  color: var(--base0);
}

.ptr-button.secondary {
  background: var(--base50);
  color: var(--base10);
}

.ptr-button.secondary:hover {
  color: var(--base0);
}

/* Invisible */
.ptr-button.invisible {
  background: transparent;
  border-color: transparent;
  box-shadow: none;
}

.ptr-button.invisible:hover {
  background: var(--base20);
}


/* Circular */
.ptr-button.circular {
  width: 2.5rem;
  height: 2.5rem;
  border: 0;
  border-radius: 50%;
  position: relative;
  top: -.15rem;
  left: -.15rem;
  outline: none;
  padding: 0;
}

.ptr-button.circular > .ptr-icon {
  width: 1.25rem;
  height: 1.25rem;
  margin: .625rem;
}

.ptr-button.circular {
  padding: 0;
}

.ptr-button.circular:after {
  border-radius: 50%;
}

.ptr-button.circular:focus::after {
  border-radius: 50%;
}

.ptr-button.circular.small {
  width: 2rem;
  height: 2rem;
}

.ptr-button.circular.small > .ptr-icon {
  width: 1rem;
  height: 1rem;
  margin: .5rem;
}

.ptr-button.circular.large {
  width: 3.5rem;
  height: 3.5rem;
}

.ptr-button.circular.large > .ptr-icon {
  width: 1.5rem;
  height: 1.5rem;
  margin: 1rem;
}


/* Side */
.ptr-button.side {
  padding: 0;
}

.ptr-button.side-left,
.ptr-button.side-right {
  width: 1.6rem;
  height: 2.5rem;
}

.ptr-button.side-left > .ptr-icon,
.ptr-button.side-right > .ptr-icon {
  margin: .625rem .2rem;
}

.ptr-button.side-left {
  border-radius: 0 .2rem .2rem 0;
}

.ptr-button.side-right {
  border-radius: .2rem 0 0 .2rem;
}

.ptr-button.side-top,
.ptr-button.side-bottom {
  height: 1.6rem;
  width: 2.5rem;
}

.ptr-button.side-top > .ptr-icon,
.ptr-button.side-bottom > .ptr-icon {
  margin: .2rem .625rem;
}

.ptr-button.side-top {
  border-radius: 0 0 .2rem .2rem;
}

.ptr-button.side-bottom {
  border-radius: .2rem .2rem 0 0;
}


/* Ghost */
.ptr-button.ghost {
  background: transparent;
  border: 1px solid var(--base70);
  box-shadow: none;
  padding: 0 calc(.35rem - 1px);
}

.ptr-button.ghost .ptr-button-caption {
  padding: calc(0.5rem - 1px) 0;
}

.ptr-button.ghost > .ptr-icon {
  margin: calc(.375rem - 1px) .25rem;
}

.ptr-button.ghost:hover {
  background: var(--base20);
}

.ptr-button.ghost.small {
  padding: 0 calc(.35rem - 1px);
}

.ptr-button.ghost.small .ptr-button-caption {
  padding: calc(.3455rem - 1px) 0;
}

.ptr-button.ghost.small .ptr-icon {
  margin: calc(.25rem - 1px) .15rem;
}

.ptr-button.ghost.large {
  border-width: 2px;
  padding: 0 calc(.5rem - 2px);
}

.ptr-button.ghost.large .ptr-button-caption {
  padding: calc(.8455rem - 2px) 0;
}

.ptr-button.ghost.large .ptr-icon {
  margin: calc(.75rem - 2px) .4rem;
}

.ptr-button.ghost.primary {
  border-color: var(--accent50);
  color: var(--accent50);
}

.ptr-button.ghost.primary:hover {
  background: var(--accent15);
}

.ptr-button.ghost.side {
  padding: 0;
}

.ptr-button.ghost.side-left {
  border-left-width: 0;
}

.ptr-button.ghost.side-right {
  border-right-width: 0;
}

.ptr-button.ghost.side-top {
  border-top-width: 0;
}

.ptr-button.ghost.side-bottom {
  border-bottom-width: 0;
}

.ptr-button.ghost.side-left > .ptr-icon,
.ptr-button.ghost.side-right > .ptr-icon {
  margin: calc(.625rem - 1px) calc(.2rem - 1px);
}

.ptr-button.ghost.side-top > .ptr-icon,
.ptr-button.ghost.side-bottom > .ptr-icon {
  margin: calc(.2rem - 1px) calc(.625rem - 1px);
}

/* Inverted */
.ptr-button.inverted {
  background: var(--base70);
  color: var(--base0);
  border-radius: .2rem;
}

.ptr-button.primary.inverted {
  background: var(--accent50);
  color: var(--base100);
}

.ptr-button.primary.inverted:hover {
  color: var(--base100);
}

.ptr-button.secondary.inverted {
  background: var(--base50);
  color: var(--base90);
}

.ptr-button.secondary.inverted:hover {
  color: var(--base100);
}

.ptr-button.inverted.invisible {
  background: transparent;
  border-color: transparent;
  box-shadow: none;
}

.ptr-button.invisible.inverted:hover {
  background: var(--base80);
}

.ptr-button.inverted.ghost {
  border-color: var(--base30);
  background: transparent;
  box-shadow: none;
}

.ptr-button.inverted.ghost:hover {
  background: var(--base85);
}

.ptr-button.inverted.ghost.primary {
  border-color: var(--accent50);
  color: var(--accent50);
}

.ptr-button.inverted.ghost.primary:hover {
  background: var(--accent95);
}

/* Disability */
.ptr-button:not(.disabled) {
  cursor: pointer;
}

.ptr-button.disabled,
.ptr-button.primary.disabled,
.ptr-button.secondary.disabled {
  pointer-events: none;
  background: var(--base15);
  color: var(--base35);
}

.ptr-button.inverted.disabled,
.ptr-button.primary.inverted.disabled,
.ptr-button.secondary.inverted.disabled {
  background: var(--base85);
  color: var(--base65);
}


.ptr-button.ghost.disabled {
  background: transparent;
  border-color: var(--base25);
  color: var(--base35);
}

.ptr-button.disabled .ptr-icon .line {
  fill: var(--base35);
}

// TODO remove after all icons will be refactored
.ptr-button.disabled .ptr-icon .polygon {
  stroke: var(--base35);
}


/* ==== Button menu ============================ */

.ptr-button-menu {
  position: absolute;
  z-index: 2;
}
.ptr-button-menu.bottom {
  top: 100%;
}
.ptr-button-menu.top {
  bottom: 100%;
}
.ptr-button-menu.left {
  right: 0;
}
.ptr-button-menu.right {
  left: 0;
}